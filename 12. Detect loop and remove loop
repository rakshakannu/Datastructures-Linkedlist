// 1. detect loop using floyd's algorithm
// 2. then move slow_p to the beginning of linked list and keep fast_p at the meeting point
// 3. now one by one move the slow and fast pointer(at the same speed). The point where they meet is the starting point of the loop. :)
// loop detection + loop removal

void detectRemoveLoop(node head)
{
  node slow_p = head;
  node fast_p = head;
  while(fast!=null && fast.next!=null)
  {
    slow_p = slow_p.next;
    fast_p = fast_p.next.next;
    if(slow==fast)
    break;
  }
  
  if(slow!=fast)
    return;
  
  slow=head;
  while(slow.next!=fast.next)
  {
    slow = slow.next;
    fast = fast.next;
  }
  
  fast.next = null;
}

// variations of questions asked in the interviews
1. find length of the loop- once you detect the loop using floyd's algo, fix one pointer at the place and keep moving the other one till 
they dont meet.
2. find first node of the loop- variation of loop removal.
